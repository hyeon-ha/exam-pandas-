{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"exam21_titanic_classification.ipynb","provenance":[{"file_id":"1R8Jbm6PKgh9MldeyNr0D9hGLfG88mdY1","timestamp":1636078542843}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"75060vlxtzwF"},"source":["# import tensorflow as tf\n","# config = tf.compat.v1.ConfigProto(gpu_options = tf.compat.v1.GPUOptions(per_process_gpu_memory_fraction=0.8)\n","# #device_count = {'GPU': 1}\n","# )\n","# config.gpu_options.allow_growth = True\n","# session = tf.compat.v1.Session(config=config)\n","# tf.compat.v1.keras.backend.set_session(session)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"gk0mUG4Juf1H"},"source":["import seaborn as sns\n","import pandas as pd\n","import numpy as np"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"frdsobKtvNro"},"source":["pd.set_option('display.max_columns', 15)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hvptSkgqveMU","executionInfo":{"status":"ok","timestamp":1636015250803,"user_tz":-540,"elapsed":87,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"c9848198-9ab8-47c9-ba99-0d3fa26fdb43"},"source":["raw_data = sns.load_dataset('titanic')\n","print(raw_data.head(50))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["    survived  pclass     sex   age  sibsp  parch      fare embarked   class  \\\n","0          0       3    male  22.0      1      0    7.2500        S   Third   \n","1          1       1  female  38.0      1      0   71.2833        C   First   \n","2          1       3  female  26.0      0      0    7.9250        S   Third   \n","3          1       1  female  35.0      1      0   53.1000        S   First   \n","4          0       3    male  35.0      0      0    8.0500        S   Third   \n","5          0       3    male   NaN      0      0    8.4583        Q   Third   \n","6          0       1    male  54.0      0      0   51.8625        S   First   \n","7          0       3    male   2.0      3      1   21.0750        S   Third   \n","8          1       3  female  27.0      0      2   11.1333        S   Third   \n","9          1       2  female  14.0      1      0   30.0708        C  Second   \n","10         1       3  female   4.0      1      1   16.7000        S   Third   \n","11         1       1  female  58.0      0      0   26.5500        S   First   \n","12         0       3    male  20.0      0      0    8.0500        S   Third   \n","13         0       3    male  39.0      1      5   31.2750        S   Third   \n","14         0       3  female  14.0      0      0    7.8542        S   Third   \n","15         1       2  female  55.0      0      0   16.0000        S  Second   \n","16         0       3    male   2.0      4      1   29.1250        Q   Third   \n","17         1       2    male   NaN      0      0   13.0000        S  Second   \n","18         0       3  female  31.0      1      0   18.0000        S   Third   \n","19         1       3  female   NaN      0      0    7.2250        C   Third   \n","20         0       2    male  35.0      0      0   26.0000        S  Second   \n","21         1       2    male  34.0      0      0   13.0000        S  Second   \n","22         1       3  female  15.0      0      0    8.0292        Q   Third   \n","23         1       1    male  28.0      0      0   35.5000        S   First   \n","24         0       3  female   8.0      3      1   21.0750        S   Third   \n","25         1       3  female  38.0      1      5   31.3875        S   Third   \n","26         0       3    male   NaN      0      0    7.2250        C   Third   \n","27         0       1    male  19.0      3      2  263.0000        S   First   \n","28         1       3  female   NaN      0      0    7.8792        Q   Third   \n","29         0       3    male   NaN      0      0    7.8958        S   Third   \n","30         0       1    male  40.0      0      0   27.7208        C   First   \n","31         1       1  female   NaN      1      0  146.5208        C   First   \n","32         1       3  female   NaN      0      0    7.7500        Q   Third   \n","33         0       2    male  66.0      0      0   10.5000        S  Second   \n","34         0       1    male  28.0      1      0   82.1708        C   First   \n","35         0       1    male  42.0      1      0   52.0000        S   First   \n","36         1       3    male   NaN      0      0    7.2292        C   Third   \n","37         0       3    male  21.0      0      0    8.0500        S   Third   \n","38         0       3  female  18.0      2      0   18.0000        S   Third   \n","39         1       3  female  14.0      1      0   11.2417        C   Third   \n","40         0       3  female  40.0      1      0    9.4750        S   Third   \n","41         0       2  female  27.0      1      0   21.0000        S  Second   \n","42         0       3    male   NaN      0      0    7.8958        C   Third   \n","43         1       2  female   3.0      1      2   41.5792        C  Second   \n","44         1       3  female  19.0      0      0    7.8792        Q   Third   \n","45         0       3    male   NaN      0      0    8.0500        S   Third   \n","46         0       3    male   NaN      1      0   15.5000        Q   Third   \n","47         1       3  female   NaN      0      0    7.7500        Q   Third   \n","48         0       3    male   NaN      2      0   21.6792        C   Third   \n","49         0       3  female  18.0      1      0   17.8000        S   Third   \n","\n","      who  adult_male deck  embark_town alive  alone  \n","0     man        True  NaN  Southampton    no  False  \n","1   woman       False    C    Cherbourg   yes  False  \n","2   woman       False  NaN  Southampton   yes   True  \n","3   woman       False    C  Southampton   yes  False  \n","4     man        True  NaN  Southampton    no   True  \n","5     man        True  NaN   Queenstown    no   True  \n","6     man        True    E  Southampton    no   True  \n","7   child       False  NaN  Southampton    no  False  \n","8   woman       False  NaN  Southampton   yes  False  \n","9   child       False  NaN    Cherbourg   yes  False  \n","10  child       False    G  Southampton   yes  False  \n","11  woman       False    C  Southampton   yes   True  \n","12    man        True  NaN  Southampton    no   True  \n","13    man        True  NaN  Southampton    no  False  \n","14  child       False  NaN  Southampton    no   True  \n","15  woman       False  NaN  Southampton   yes   True  \n","16  child       False  NaN   Queenstown    no  False  \n","17    man        True  NaN  Southampton   yes   True  \n","18  woman       False  NaN  Southampton    no  False  \n","19  woman       False  NaN    Cherbourg   yes   True  \n","20    man        True  NaN  Southampton    no   True  \n","21    man        True    D  Southampton   yes   True  \n","22  child       False  NaN   Queenstown   yes   True  \n","23    man        True    A  Southampton   yes   True  \n","24  child       False  NaN  Southampton    no  False  \n","25  woman       False  NaN  Southampton   yes  False  \n","26    man        True  NaN    Cherbourg    no   True  \n","27    man        True    C  Southampton    no  False  \n","28  woman       False  NaN   Queenstown   yes   True  \n","29    man        True  NaN  Southampton    no   True  \n","30    man        True  NaN    Cherbourg    no   True  \n","31  woman       False    B    Cherbourg   yes  False  \n","32  woman       False  NaN   Queenstown   yes   True  \n","33    man        True  NaN  Southampton    no   True  \n","34    man        True  NaN    Cherbourg    no  False  \n","35    man        True  NaN  Southampton    no  False  \n","36    man        True  NaN    Cherbourg   yes   True  \n","37    man        True  NaN  Southampton    no   True  \n","38  woman       False  NaN  Southampton    no  False  \n","39  child       False  NaN    Cherbourg   yes  False  \n","40  woman       False  NaN  Southampton    no  False  \n","41  woman       False  NaN  Southampton    no  False  \n","42    man        True  NaN    Cherbourg    no   True  \n","43  child       False  NaN    Cherbourg   yes  False  \n","44  woman       False  NaN   Queenstown   yes   True  \n","45    man        True  NaN  Southampton    no   True  \n","46    man        True  NaN   Queenstown    no  False  \n","47  woman       False  NaN   Queenstown   yes   True  \n","48    man        True  NaN    Cherbourg    no  False  \n","49  woman       False  NaN  Southampton    no  False  \n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jpYIfvL1w7hG","executionInfo":{"status":"ok","timestamp":1636015250804,"user_tz":-540,"elapsed":85,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"f84fc287-7b48-4d56-f696-21ee6b08e9e6"},"source":["print(raw_data.info())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 891 entries, 0 to 890\n","Data columns (total 15 columns):\n"," #   Column       Non-Null Count  Dtype   \n","---  ------       --------------  -----   \n"," 0   survived     891 non-null    int64   \n"," 1   pclass       891 non-null    int64   \n"," 2   sex          891 non-null    object  \n"," 3   age          714 non-null    float64 \n"," 4   sibsp        891 non-null    int64   \n"," 5   parch        891 non-null    int64   \n"," 6   fare         891 non-null    float64 \n"," 7   embarked     889 non-null    object  \n"," 8   class        891 non-null    category\n"," 9   who          891 non-null    object  \n"," 10  adult_male   891 non-null    bool    \n"," 11  deck         203 non-null    category\n"," 12  embark_town  889 non-null    object  \n"," 13  alive        891 non-null    object  \n"," 14  alone        891 non-null    bool    \n","dtypes: bool(2), category(2), float64(2), int64(4), object(5)\n","memory usage: 80.6+ KB\n","None\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vsEpMwW6xY2T","executionInfo":{"status":"ok","timestamp":1636015250804,"user_tz":-540,"elapsed":82,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"96bf35aa-c399-4164-9e7d-ea7878720c80"},"source":["print(raw_data.isnull().sum())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["survived         0\n","pclass           0\n","sex              0\n","age            177\n","sibsp            0\n","parch            0\n","fare             0\n","embarked         2\n","class            0\n","who              0\n","adult_male       0\n","deck           688\n","embark_town      2\n","alive            0\n","alone            0\n","dtype: int64\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tWxB3YYUyHj9","executionInfo":{"status":"ok","timestamp":1636015250805,"user_tz":-540,"elapsed":81,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"75f553a2-0eb6-4371-bb40-4cc2886a7219"},"source":["clean_data = raw_data.dropna(axis=1, thresh=500)\n","print(clean_data.columns)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['survived', 'pclass', 'sex', 'age', 'sibsp', 'parch', 'fare',\n","       'embarked', 'class', 'who', 'adult_male', 'embark_town', 'alive',\n","       'alone'],\n","      dtype='object')\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gmQzVwmazly8","executionInfo":{"status":"ok","timestamp":1636015250805,"user_tz":-540,"elapsed":80,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"0eb42d58-5363-4061-960a-af3ecd75f805"},"source":["mean_age = clean_data['age'].mean()\n","clean_data['age'].fillna(mean_age, inplace=True)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/pandas/core/series.py:4536: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  downcast=downcast,\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zipAhjyh0CRe","executionInfo":{"status":"ok","timestamp":1636015250805,"user_tz":-540,"elapsed":76,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"b0762ba3-e1dd-44ad-8ebe-b846677b3e16"},"source":["print(clean_data.head(20))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["    survived  pclass     sex        age  sibsp  parch     fare embarked  \\\n","0          0       3    male  22.000000      1      0   7.2500        S   \n","1          1       1  female  38.000000      1      0  71.2833        C   \n","2          1       3  female  26.000000      0      0   7.9250        S   \n","3          1       1  female  35.000000      1      0  53.1000        S   \n","4          0       3    male  35.000000      0      0   8.0500        S   \n","5          0       3    male  29.699118      0      0   8.4583        Q   \n","6          0       1    male  54.000000      0      0  51.8625        S   \n","7          0       3    male   2.000000      3      1  21.0750        S   \n","8          1       3  female  27.000000      0      2  11.1333        S   \n","9          1       2  female  14.000000      1      0  30.0708        C   \n","10         1       3  female   4.000000      1      1  16.7000        S   \n","11         1       1  female  58.000000      0      0  26.5500        S   \n","12         0       3    male  20.000000      0      0   8.0500        S   \n","13         0       3    male  39.000000      1      5  31.2750        S   \n","14         0       3  female  14.000000      0      0   7.8542        S   \n","15         1       2  female  55.000000      0      0  16.0000        S   \n","16         0       3    male   2.000000      4      1  29.1250        Q   \n","17         1       2    male  29.699118      0      0  13.0000        S   \n","18         0       3  female  31.000000      1      0  18.0000        S   \n","19         1       3  female  29.699118      0      0   7.2250        C   \n","\n","     class    who  adult_male  embark_town alive  alone  \n","0    Third    man        True  Southampton    no  False  \n","1    First  woman       False    Cherbourg   yes  False  \n","2    Third  woman       False  Southampton   yes   True  \n","3    First  woman       False  Southampton   yes  False  \n","4    Third    man        True  Southampton    no   True  \n","5    Third    man        True   Queenstown    no   True  \n","6    First    man        True  Southampton    no   True  \n","7    Third  child       False  Southampton    no  False  \n","8    Third  woman       False  Southampton   yes  False  \n","9   Second  child       False    Cherbourg   yes  False  \n","10   Third  child       False  Southampton   yes  False  \n","11   First  woman       False  Southampton   yes   True  \n","12   Third    man        True  Southampton    no   True  \n","13   Third    man        True  Southampton    no  False  \n","14   Third  child       False  Southampton    no   True  \n","15  Second  woman       False  Southampton   yes   True  \n","16   Third  child       False   Queenstown    no  False  \n","17  Second    man        True  Southampton   yes   True  \n","18   Third  woman       False  Southampton    no  False  \n","19   Third  woman       False    Cherbourg   yes   True  \n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fnpyM4QP1O0-","executionInfo":{"status":"ok","timestamp":1636015250806,"user_tz":-540,"elapsed":74,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"0e999bd1-35b5-4ac5-8144-7efa48aceda7"},"source":["clean_data.drop(['embark_town', 'alive', 'class'], axis=1,\n","                inplace=True)\n","print(clean_data.info())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 891 entries, 0 to 890\n","Data columns (total 11 columns):\n"," #   Column      Non-Null Count  Dtype  \n","---  ------      --------------  -----  \n"," 0   survived    891 non-null    int64  \n"," 1   pclass      891 non-null    int64  \n"," 2   sex         891 non-null    object \n"," 3   age         891 non-null    float64\n"," 4   sibsp       891 non-null    int64  \n"," 5   parch       891 non-null    int64  \n"," 6   fare        891 non-null    float64\n"," 7   embarked    889 non-null    object \n"," 8   who         891 non-null    object \n"," 9   adult_male  891 non-null    bool   \n"," 10  alone       891 non-null    bool   \n","dtypes: bool(2), float64(2), int64(4), object(3)\n","memory usage: 64.5+ KB\n","None\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/pandas/core/frame.py:4174: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J1W27EVW11Vq","executionInfo":{"status":"ok","timestamp":1636015250806,"user_tz":-540,"elapsed":70,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"d883ab21-eae1-4e08-ec2d-8a03a0d08c40"},"source":["clean_data['embarked'].fillna(\n","    method='ffill', inplace=True)\n","print(clean_data.isnull().sum())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["survived      0\n","pclass        0\n","sex           0\n","age           0\n","sibsp         0\n","parch         0\n","fare          0\n","embarked      0\n","who           0\n","adult_male    0\n","alone         0\n","dtype: int64\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/pandas/core/series.py:4536: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  downcast=downcast,\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"52Y-zkU32h1c","executionInfo":{"status":"ok","timestamp":1636015250806,"user_tz":-540,"elapsed":66,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"937a4134-2027-4ba9-bb69-7693e03f0899"},"source":["clean_data['sex'].replace({'male':0, 'female':1},\n","                          inplace=True)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/pandas/core/series.py:4582: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  method=method,\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CEtJiBzK24Un","executionInfo":{"status":"ok","timestamp":1636015250807,"user_tz":-540,"elapsed":60,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"ea572ecb-8ece-485a-ee44-cc5132ccb4ba"},"source":["print(clean_data['sex'].unique())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0 1]\n"]}]},{"cell_type":"code","metadata":{"id":"hrplmGwn3A2P"},"source":["from sklearn import preprocessing"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Us6c-D8q38ja"},"source":["label_encoder = preprocessing.LabelEncoder()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l6ZJAkpR4H1S","executionInfo":{"status":"ok","timestamp":1636015250807,"user_tz":-540,"elapsed":57,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"6b7584ad-a8bb-41ac-a74f-70b1e7ec211b"},"source":["print(clean_data['embarked'].value_counts())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["S    644\n","C    169\n","Q     78\n","Name: embarked, dtype: int64\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Jpa_cyU64WCk","executionInfo":{"status":"ok","timestamp":1636015250808,"user_tz":-540,"elapsed":57,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"12cc6e75-d525-4510-8b9f-0af2617871e4"},"source":["clean_data['embarked'] = label_encoder.fit_transform(\n","    clean_data['embarked'])\n","print(clean_data['embarked'].unique())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[2 0 1]\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GOr4g-Cj5GH4","executionInfo":{"status":"ok","timestamp":1636015250808,"user_tz":-540,"elapsed":54,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"325cbb97-c775-4900-8f21-d848ad3525eb"},"source":["clean_data['who'] =label_encoder.fit_transform(\n","    clean_data['who'])\n","print(clean_data['who'].unique())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1 2 0]\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"txtamDBt53cP","executionInfo":{"status":"ok","timestamp":1636015250808,"user_tz":-540,"elapsed":51,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"882dcc38-6271-45f9-c768-d587f8f9f75d"},"source":["clean_data['adult_male'] = clean_data['adult_male'].astype(\n","    'int64')\n","print(clean_data.adult_male.head())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0    1\n","1    0\n","2    0\n","3    0\n","4    1\n","Name: adult_male, dtype: int64\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ibPd69Gv6o47","executionInfo":{"status":"ok","timestamp":1636015250809,"user_tz":-540,"elapsed":46,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"77bebce7-17c0-4196-ab67-0ad94dbc4a03"},"source":["clean_data['alone'] = clean_data['alone'].astype(\n","    'int64')\n","print(clean_data.alone.head())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0    0\n","1    0\n","2    1\n","3    0\n","4    1\n","Name: alone, dtype: int64\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oomv1bYM7C29","executionInfo":{"status":"ok","timestamp":1636015250809,"user_tz":-540,"elapsed":41,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"ef4a9658-9f7e-4778-dabd-cda4ec7a6ef6"},"source":["clean_data['who'] = label_encoder.fit_transform(\n","    clean_data['who'])\n","print(clean_data['who'].unique())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1 2 0]\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H77N5pvb2LJP","executionInfo":{"status":"ok","timestamp":1636015250810,"user_tz":-540,"elapsed":39,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"afe84c63-c685-4a30-c1ba-d08466cecb12"},"source":["print(clean_data.info())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 891 entries, 0 to 890\n","Data columns (total 11 columns):\n"," #   Column      Non-Null Count  Dtype  \n","---  ------      --------------  -----  \n"," 0   survived    891 non-null    int64  \n"," 1   pclass      891 non-null    int64  \n"," 2   sex         891 non-null    int64  \n"," 3   age         891 non-null    float64\n"," 4   sibsp       891 non-null    int64  \n"," 5   parch       891 non-null    int64  \n"," 6   fare        891 non-null    float64\n"," 7   embarked    891 non-null    int64  \n"," 8   who         891 non-null    int64  \n"," 9   adult_male  891 non-null    int64  \n"," 10  alone       891 non-null    int64  \n","dtypes: float64(2), int64(9)\n","memory usage: 76.7 KB\n","None\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ClGsH8qM8pkh","executionInfo":{"status":"ok","timestamp":1636015250810,"user_tz":-540,"elapsed":37,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"53d289a8-cfd0-4374-9845-419b50da9cc2"},"source":["target = clean_data[['survived']]\n","training_data = clean_data.drop('survived', axis=1)\n","print(training_data.head())\n","print(target.head())                    "],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["   pclass  sex   age  sibsp  parch     fare  embarked  who  adult_male  alone\n","0       3    0  22.0      1      0   7.2500         2    1           1      0\n","1       1    1  38.0      1      0  71.2833         0    2           0      0\n","2       3    1  26.0      0      0   7.9250         2    2           0      1\n","3       1    1  35.0      1      0  53.1000         2    2           0      0\n","4       3    0  35.0      0      0   8.0500         2    1           1      1\n","   survived\n","0         0\n","1         1\n","2         1\n","3         1\n","4         0\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cZ-8CElgA_0H","executionInfo":{"status":"ok","timestamp":1636015250811,"user_tz":-540,"elapsed":35,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"333c86a9-2205-4c09-a0fd-deeae62e79c0"},"source":["value_data = training_data[['age', 'fare']]\n","print(value_data.head())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["    age     fare\n","0  22.0   7.2500\n","1  38.0  71.2833\n","2  26.0   7.9250\n","3  35.0  53.1000\n","4  35.0   8.0500\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pzYAc841BJn2","executionInfo":{"status":"ok","timestamp":1636015250812,"user_tz":-540,"elapsed":32,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"d1827f2e-c290-46db-f33e-d130adbb8cbd"},"source":["from sklearn.preprocessing import StandardScaler\n","scaler = StandardScaler()\n","scaled_data = scaler.fit_transform(value_data)\n","scaled_data = pd.DataFrame(scaled_data, \n","                columns=value_data.columns)\n","print(scaled_data.head())\n","print(scaled_data.describe())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["        age      fare\n","0 -0.592481 -0.502445\n","1  0.638789  0.786845\n","2 -0.284663 -0.488854\n","3  0.407926  0.420730\n","4  0.407926 -0.486337\n","                age          fare\n","count  8.910000e+02  8.910000e+02\n","mean   2.562796e-16 -4.373606e-17\n","std    1.000562e+00  1.000562e+00\n","min   -2.253155e+00 -6.484217e-01\n","25%   -5.924806e-01 -4.891482e-01\n","50%    0.000000e+00 -3.573909e-01\n","75%    4.079260e-01 -2.424635e-02\n","max    3.870872e+00  9.667167e+00\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v12bVPJPCGCJ","executionInfo":{"status":"ok","timestamp":1636015250812,"user_tz":-540,"elapsed":30,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"a277a46a-6668-4b1a-b31b-84be3d0455b9"},"source":["training_data.drop(['age', 'fare'], axis=1, inplace=True)\n","print(training_data.head())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["   pclass  sex  sibsp  parch  embarked  who  adult_male  alone\n","0       3    0      1      0         2    1           1      0\n","1       1    1      1      0         0    2           0      0\n","2       3    1      0      0         2    2           0      1\n","3       1    1      1      0         2    2           0      0\n","4       3    0      0      0         2    1           1      1\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yU8YqaMmDbpn","executionInfo":{"status":"ok","timestamp":1636015251430,"user_tz":-540,"elapsed":645,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"95358627-ce1f-4eac-9a26-7f0727765264"},"source":["onehot_data = pd.get_dummies(training_data['pclass'])\n","print(onehot_data.head())\n","print(training_data['pclass'].head())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["   1  2  3\n","0  0  0  1\n","1  1  0  0\n","2  0  0  1\n","3  1  0  0\n","4  0  0  1\n","0    3\n","1    1\n","2    3\n","3    1\n","4    3\n","Name: pclass, dtype: int64\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SQv0L29HEJZM","executionInfo":{"status":"ok","timestamp":1636015251430,"user_tz":-540,"elapsed":24,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"2835c280-693b-412a-bb3a-4013b847918f"},"source":["onehot_data = pd.get_dummies(training_data['pclass'])\n","print(onehot_data.head())\n","print(training_data['pclass'].head())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["   1  2  3\n","0  0  0  1\n","1  1  0  0\n","2  0  0  1\n","3  1  0  0\n","4  0  0  1\n","0    3\n","1    1\n","2    3\n","3    1\n","4    3\n","Name: pclass, dtype: int64\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":223},"id":"tL66fDIaEMTt","executionInfo":{"status":"ok","timestamp":1636015251431,"user_tz":-540,"elapsed":23,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"a8fd1113-af13-4de6-d37e-36ca8a4348ba"},"source":["raw_data.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","      <th>pclass</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>fare</th>\n","      <th>embarked</th>\n","      <th>class</th>\n","      <th>who</th>\n","      <th>adult_male</th>\n","      <th>deck</th>\n","      <th>embark_town</th>\n","      <th>alive</th>\n","      <th>alone</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>71.2833</td>\n","      <td>C</td>\n","      <td>First</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>C</td>\n","      <td>Cherbourg</td>\n","      <td>yes</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>53.1000</td>\n","      <td>S</td>\n","      <td>First</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>C</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   survived  pclass     sex   age  sibsp  parch     fare embarked  class  \\\n","0         0       3    male  22.0      1      0   7.2500        S  Third   \n","1         1       1  female  38.0      1      0  71.2833        C  First   \n","2         1       3  female  26.0      0      0   7.9250        S  Third   \n","3         1       1  female  35.0      1      0  53.1000        S  First   \n","4         0       3    male  35.0      0      0   8.0500        S  Third   \n","\n","     who  adult_male deck  embark_town alive  alone  \n","0    man        True  NaN  Southampton    no  False  \n","1  woman       False    C    Cherbourg   yes  False  \n","2  woman       False  NaN  Southampton   yes   True  \n","3  woman       False    C  Southampton   yes  False  \n","4    man        True  NaN  Southampton    no   True  "]},"metadata":{},"execution_count":88}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9nDOUSf8HSCS","executionInfo":{"status":"ok","timestamp":1636015251431,"user_tz":-540,"elapsed":22,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"6a3915cb-df18-4a04-b080-5ac8d1f58e63"},"source":["raw_data.columns"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['survived', 'pclass', 'sex', 'age', 'sibsp', 'parch', 'fare',\n","       'embarked', 'class', 'who', 'adult_male', 'deck', 'embark_town',\n","       'alive', 'alone'],\n","      dtype='object')"]},"metadata":{},"execution_count":89}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cFPce1-mER5L","executionInfo":{"status":"ok","timestamp":1636015251432,"user_tz":-540,"elapsed":19,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"a22428b1-c0f3-4ee7-8ea1-7aadaa9c38c0"},"source":["onehot_data = pd.get_dummies(raw_data[['pclass', 'sex']],\n","                    columns=['pclass', 'sex'])\n","print(onehot_data.head())\n","print(raw_data['sex'].head())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["   pclass_1  pclass_2  pclass_3  sex_female  sex_male\n","0         0         0         1           0         1\n","1         1         0         0           1         0\n","2         0         0         1           1         0\n","3         1         0         0           1         0\n","4         0         0         1           0         1\n","0      male\n","1    female\n","2    female\n","3    female\n","4      male\n","Name: sex, dtype: object\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pJoW97JWGUom","executionInfo":{"status":"ok","timestamp":1636015251432,"user_tz":-540,"elapsed":17,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"b20fd472-9253-45ac-edc8-4cb44aa6ade0"},"source":["onehot_data = pd.get_dummies(training_data, \n","                columns=training_data.columns)\n","print(onehot_data.head())\n","print(training_data.head())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["   pclass_1  pclass_2  pclass_3  sex_0  sex_1  sibsp_0  sibsp_1  ...  who_0  \\\n","0         0         0         1      1      0        0        1  ...      0   \n","1         1         0         0      0      1        0        1  ...      0   \n","2         0         0         1      0      1        1        0  ...      0   \n","3         1         0         0      0      1        0        1  ...      0   \n","4         0         0         1      1      0        1        0  ...      0   \n","\n","   who_1  who_2  adult_male_0  adult_male_1  alone_0  alone_1  \n","0      1      0             0             1        1        0  \n","1      0      1             1             0        1        0  \n","2      0      1             1             0        0        1  \n","3      0      1             1             0        1        0  \n","4      1      0             0             1        0        1  \n","\n","[5 rows x 29 columns]\n","   pclass  sex  sibsp  parch  embarked  who  adult_male  alone\n","0       3    0      1      0         2    1           1      0\n","1       1    1      1      0         0    2           0      0\n","2       3    1      0      0         2    2           0      1\n","3       1    1      1      0         2    2           0      0\n","4       3    0      0      0         2    1           1      1\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dzqFLyKaH8S9","executionInfo":{"status":"ok","timestamp":1636015251432,"user_tz":-540,"elapsed":15,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"42b71628-de23-4ef0-885b-22e8e1c9a316"},"source":["training_data = pd.concat([value_data, onehot_data],\n","                          axis=1)\n","print(training_data.info())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 891 entries, 0 to 890\n","Data columns (total 31 columns):\n"," #   Column        Non-Null Count  Dtype  \n","---  ------        --------------  -----  \n"," 0   age           891 non-null    float64\n"," 1   fare          891 non-null    float64\n"," 2   pclass_1      891 non-null    uint8  \n"," 3   pclass_2      891 non-null    uint8  \n"," 4   pclass_3      891 non-null    uint8  \n"," 5   sex_0         891 non-null    uint8  \n"," 6   sex_1         891 non-null    uint8  \n"," 7   sibsp_0       891 non-null    uint8  \n"," 8   sibsp_1       891 non-null    uint8  \n"," 9   sibsp_2       891 non-null    uint8  \n"," 10  sibsp_3       891 non-null    uint8  \n"," 11  sibsp_4       891 non-null    uint8  \n"," 12  sibsp_5       891 non-null    uint8  \n"," 13  sibsp_8       891 non-null    uint8  \n"," 14  parch_0       891 non-null    uint8  \n"," 15  parch_1       891 non-null    uint8  \n"," 16  parch_2       891 non-null    uint8  \n"," 17  parch_3       891 non-null    uint8  \n"," 18  parch_4       891 non-null    uint8  \n"," 19  parch_5       891 non-null    uint8  \n"," 20  parch_6       891 non-null    uint8  \n"," 21  embarked_0    891 non-null    uint8  \n"," 22  embarked_1    891 non-null    uint8  \n"," 23  embarked_2    891 non-null    uint8  \n"," 24  who_0         891 non-null    uint8  \n"," 25  who_1         891 non-null    uint8  \n"," 26  who_2         891 non-null    uint8  \n"," 27  adult_male_0  891 non-null    uint8  \n"," 28  adult_male_1  891 non-null    uint8  \n"," 29  alone_0       891 non-null    uint8  \n"," 30  alone_1       891 non-null    uint8  \n","dtypes: float64(2), uint8(29)\n","memory usage: 39.3 KB\n","None\n"]}]},{"cell_type":"code","metadata":{"id":"J03nf5Gz72Mn"},"source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, Y_train, Y_test = train_test_split(\n","    training_data, target, test_size=0.20)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nZNReh2B8MJA","executionInfo":{"status":"ok","timestamp":1636015251433,"user_tz":-540,"elapsed":14,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"994a0267-044c-44ac-f64b-ad68876303b8"},"source":["print(X_train.shape, Y_train.shape)\n","print(X_test.shape, Y_test.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(712, 31) (712, 1)\n","(179, 31) (179, 1)\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WtzAVg348-eW","executionInfo":{"status":"ok","timestamp":1636015251433,"user_tz":-540,"elapsed":13,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"3c7f6222-55e9-4a2a-986c-0425d0bbe728"},"source":["type(Y_train)\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["pandas.core.frame.DataFrame"]},"metadata":{},"execution_count":95}]},{"cell_type":"code","metadata":{"id":"vDzukq2B8Zum"},"source":["from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense, Dropout"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DBSKF3l59yDs","executionInfo":{"status":"ok","timestamp":1636015347080,"user_tz":-540,"elapsed":403,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"16f7a6b9-5126-4e2b-c9ae-85405add992e"},"source":["model = Sequential()\n","model.add(Dense(128, input_dim=31, activation='relu'))\n","model.add(Dropout(0.02))\n","model.add(Dense(256, activation='relu'))\n","model.add(Dropout(0.2))\n","model.add(Dense(512, activation='relu'))\n","model.add(Dropout(0.2))\n","model.add(Dense(256, activation='relu'))\n","model.add(Dropout(0.2))\n","model.add(Dense(128, activation='relu'))\n","model.add(Dropout(0.02))\n","model.add(Dense(64, activation='relu'))\n","model.add(Dropout(0.02))\n","model.add(Dense(32, activation='relu'))\n","model.add(Dropout(0.02))\n","model.add(Dense(1, activation='sigmoid'))\n","print(model.summary())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_5\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","dense_40 (Dense)             (None, 128)               4096      \n","_________________________________________________________________\n","dropout_35 (Dropout)         (None, 128)               0         \n","_________________________________________________________________\n","dense_41 (Dense)             (None, 256)               33024     \n","_________________________________________________________________\n","dropout_36 (Dropout)         (None, 256)               0         \n","_________________________________________________________________\n","dense_42 (Dense)             (None, 512)               131584    \n","_________________________________________________________________\n","dropout_37 (Dropout)         (None, 512)               0         \n","_________________________________________________________________\n","dense_43 (Dense)             (None, 256)               131328    \n","_________________________________________________________________\n","dropout_38 (Dropout)         (None, 256)               0         \n","_________________________________________________________________\n","dense_44 (Dense)             (None, 128)               32896     \n","_________________________________________________________________\n","dropout_39 (Dropout)         (None, 128)               0         \n","_________________________________________________________________\n","dense_45 (Dense)             (None, 64)                8256      \n","_________________________________________________________________\n","dropout_40 (Dropout)         (None, 64)                0         \n","_________________________________________________________________\n","dense_46 (Dense)             (None, 32)                2080      \n","_________________________________________________________________\n","dropout_41 (Dropout)         (None, 32)                0         \n","_________________________________________________________________\n","dense_47 (Dense)             (None, 1)                 33        \n","=================================================================\n","Total params: 343,297\n","Trainable params: 343,297\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IDCj3IEJ_MHQ","executionInfo":{"status":"ok","timestamp":1636015356370,"user_tz":-540,"elapsed":6123,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"63029802-e8f0-4eba-99ae-42ae07f22ef3"},"source":["model.compile(loss='mse', \n","              optimizer='adam',\n","              metrics=['binary_accuracy'])\n","fit_hist = model.fit(\n","    X_train, Y_train, batch_size= 50, epochs = 30,\n","    validation_split=0.2, verbose=1)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/30\n","12/12 [==============================] - 1s 26ms/step - loss: 0.2510 - binary_accuracy: 0.6204 - val_loss: 0.1996 - val_binary_accuracy: 0.6923\n","Epoch 2/30\n","12/12 [==============================] - 0s 11ms/step - loss: 0.2260 - binary_accuracy: 0.6626 - val_loss: 0.2058 - val_binary_accuracy: 0.6993\n","Epoch 3/30\n","12/12 [==============================] - 0s 11ms/step - loss: 0.2210 - binary_accuracy: 0.6678 - val_loss: 0.1939 - val_binary_accuracy: 0.6993\n","Epoch 4/30\n","12/12 [==============================] - 0s 13ms/step - loss: 0.2146 - binary_accuracy: 0.6749 - val_loss: 0.1931 - val_binary_accuracy: 0.7063\n","Epoch 5/30\n","12/12 [==============================] - 0s 12ms/step - loss: 0.2047 - binary_accuracy: 0.6837 - val_loss: 0.1777 - val_binary_accuracy: 0.7483\n","Epoch 6/30\n","12/12 [==============================] - 0s 13ms/step - loss: 0.1985 - binary_accuracy: 0.6854 - val_loss: 0.1567 - val_binary_accuracy: 0.7762\n","Epoch 7/30\n","12/12 [==============================] - 0s 11ms/step - loss: 0.1840 - binary_accuracy: 0.7135 - val_loss: 0.1578 - val_binary_accuracy: 0.8042\n","Epoch 8/30\n","12/12 [==============================] - 0s 12ms/step - loss: 0.1786 - binary_accuracy: 0.7452 - val_loss: 0.1529 - val_binary_accuracy: 0.7832\n","Epoch 9/30\n","12/12 [==============================] - 0s 11ms/step - loss: 0.1917 - binary_accuracy: 0.7276 - val_loss: 0.1741 - val_binary_accuracy: 0.7552\n","Epoch 10/30\n","12/12 [==============================] - 0s 12ms/step - loss: 0.1816 - binary_accuracy: 0.7346 - val_loss: 0.1525 - val_binary_accuracy: 0.7832\n","Epoch 11/30\n","12/12 [==============================] - 0s 13ms/step - loss: 0.1694 - binary_accuracy: 0.7786 - val_loss: 0.1713 - val_binary_accuracy: 0.7552\n","Epoch 12/30\n","12/12 [==============================] - 0s 12ms/step - loss: 0.1738 - binary_accuracy: 0.7575 - val_loss: 0.1386 - val_binary_accuracy: 0.8182\n","Epoch 13/30\n","12/12 [==============================] - 0s 11ms/step - loss: 0.1647 - binary_accuracy: 0.7698 - val_loss: 0.1362 - val_binary_accuracy: 0.8042\n","Epoch 14/30\n","12/12 [==============================] - 0s 15ms/step - loss: 0.1598 - binary_accuracy: 0.7575 - val_loss: 0.1543 - val_binary_accuracy: 0.7762\n","Epoch 15/30\n","12/12 [==============================] - 0s 12ms/step - loss: 0.1622 - binary_accuracy: 0.7856 - val_loss: 0.1511 - val_binary_accuracy: 0.7902\n","Epoch 16/30\n","12/12 [==============================] - 0s 11ms/step - loss: 0.1568 - binary_accuracy: 0.7715 - val_loss: 0.1420 - val_binary_accuracy: 0.8182\n","Epoch 17/30\n","12/12 [==============================] - 0s 11ms/step - loss: 0.1481 - binary_accuracy: 0.7944 - val_loss: 0.1364 - val_binary_accuracy: 0.8392\n","Epoch 18/30\n","12/12 [==============================] - 0s 13ms/step - loss: 0.1513 - binary_accuracy: 0.7838 - val_loss: 0.1339 - val_binary_accuracy: 0.8322\n","Epoch 19/30\n","12/12 [==============================] - 0s 11ms/step - loss: 0.1487 - binary_accuracy: 0.7909 - val_loss: 0.1485 - val_binary_accuracy: 0.7902\n","Epoch 20/30\n","12/12 [==============================] - 0s 13ms/step - loss: 0.1560 - binary_accuracy: 0.7873 - val_loss: 0.1403 - val_binary_accuracy: 0.8252\n","Epoch 21/30\n","12/12 [==============================] - 0s 11ms/step - loss: 0.1465 - binary_accuracy: 0.8137 - val_loss: 0.1305 - val_binary_accuracy: 0.8252\n","Epoch 22/30\n","12/12 [==============================] - 0s 11ms/step - loss: 0.1422 - binary_accuracy: 0.8102 - val_loss: 0.1353 - val_binary_accuracy: 0.8182\n","Epoch 23/30\n","12/12 [==============================] - 0s 13ms/step - loss: 0.1488 - binary_accuracy: 0.7926 - val_loss: 0.1437 - val_binary_accuracy: 0.8042\n","Epoch 24/30\n","12/12 [==============================] - 0s 13ms/step - loss: 0.1410 - binary_accuracy: 0.8172 - val_loss: 0.1356 - val_binary_accuracy: 0.8322\n","Epoch 25/30\n","12/12 [==============================] - 0s 14ms/step - loss: 0.1342 - binary_accuracy: 0.8243 - val_loss: 0.1321 - val_binary_accuracy: 0.8182\n","Epoch 26/30\n","12/12 [==============================] - 0s 12ms/step - loss: 0.1410 - binary_accuracy: 0.7996 - val_loss: 0.1304 - val_binary_accuracy: 0.8182\n","Epoch 27/30\n","12/12 [==============================] - 0s 11ms/step - loss: 0.1353 - binary_accuracy: 0.8295 - val_loss: 0.1415 - val_binary_accuracy: 0.7972\n","Epoch 28/30\n","12/12 [==============================] - 0s 12ms/step - loss: 0.1366 - binary_accuracy: 0.8225 - val_loss: 0.1301 - val_binary_accuracy: 0.8182\n","Epoch 29/30\n","12/12 [==============================] - 0s 13ms/step - loss: 0.1380 - binary_accuracy: 0.8155 - val_loss: 0.1370 - val_binary_accuracy: 0.8182\n","Epoch 30/30\n","12/12 [==============================] - 0s 13ms/step - loss: 0.1457 - binary_accuracy: 0.7926 - val_loss: 0.1302 - val_binary_accuracy: 0.8182\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"u18mVfnEBtrM","executionInfo":{"status":"ok","timestamp":1636015358454,"user_tz":-540,"elapsed":407,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"bbacc325-b337-4ff9-9230-2535de8caa1e"},"source":["import matplotlib.pyplot as plt\n","plt.plot(fit_hist.history['binary_accuracy'])\n","plt.plot(fit_hist.history['val_binary_accuracy'])\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AYQ7a7yNGB6A","executionInfo":{"status":"ok","timestamp":1636015361898,"user_tz":-540,"elapsed":349,"user":{"displayName":"KyoungYoon Jeoung","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh15rsOZjE_rHHadFERq0TBmzJkUCiGfEeI6H0pEA=s64","userId":"08675786042851087109"}},"outputId":"509e451a-1810-4ee0-b25d-06d31a9c349d"},"source":["score = model.evaluate(X_test, Y_test, verbose=0)\n","print('loss ', score[0])\n","print('accuracy ', score[1])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["loss  0.15220558643341064\n","accuracy  0.7877094745635986\n"]}]},{"cell_type":"code","metadata":{"id":"TWSg03VIJrUp"},"source":[""],"execution_count":null,"outputs":[]}]}