{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"exam22_classfication_mnist.ipynb의 사본","private_outputs":true,"provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"oZq9GMq3JjWe"},"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense\n","from tensorflow.keras.optimizers import Adam\n","from keras.utils import np_utils\n","from tensorflow.keras import datasets"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"xtwf_vtMLS_r"},"source":["(X_train, Y_train), (X_test, Y_test) = datasets.mnist.load_data()\n","print(X_train.shape, Y_train.shape)\n","print(X_test.shape, Y_test.shape)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"sOsZvS8YMCvY"},"source":["my_sample = np.random.randint(60000)\n","plt.imshow(X_train[my_sample], cmap = 'gray')\n","plt.show()\n","print(f'============================================\\n정답은 \"{Y_train[my_sample]}\" 입니다.')\n","print(X_train[my_sample])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"KGu03YPhPUMg"},"source":["print(Y_train[:10])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"t-9LUxlnPXd-"},"source":["plt.imshow(X_train[2], cmap='gray')\n","plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"lxEUd1EG8Ypc"},"source":["y_train = np_utils.to_categorical(Y_train)\n","y_test = np_utils.to_categorical(Y_test)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"bd2CYKWs8pYB"},"source":["print(Y_train[10])\n","print(y_train[10])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"P8I020hl-4sI"},"source":["x_train = X_train.reshape(-1, 28 * 28)\n","x_test = X_test.reshape(-1, 28 * 28)\n","x_test = x_test / 255\n","x_train = x_train / 255 \n","print(x_train[0])\n","print(x_train.shape)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"IbKIYM4DA2BH"},"source":["model = Sequential()\n","model.add(Dense(128, input_dim = 784, activation = 'relu'))\n","model.add(Dense(128, activation = 'relu'))\n","model.add(Dense(10, activation = 'softmax'))\n","opt = Adam(learning_rate = 0.01)\n","model.compile(opt, loss = 'categorical_crossentropy', metrics = ['accuracy'])\n","print(model.summary())"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"CrZ0Dnu1CmlR"},"source":["fit_hist = model.fit(x_train, y_train, batch_size=480, epochs=15, validation_split=0.2, verbose=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"NhaWj_jREBiw"},"source":["score = model.evaluate(x_test, y_test, verbose=0)\n","print('Final test set accuracy :', score[1])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"E69uMVmcECQw"},"source":["plt.plot(fit_hist.history['accuracy'])\n","plt.plot(fit_hist.history['val_accuracy'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"6_mz4Ml-FU5f"},"source":["my_sample = np.random.randint(10000)\n","plt.imshow(X_test[my_sample], cmap='gray')\n","print(Y_test[my_sample])\n","pred = model.predict(x_test[my_sample].reshape(-1,784))\n","print(pred)\n","print(np.argmax(pred))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Uikub37nFZ9n"},"source":[""],"execution_count":null,"outputs":[]}]}